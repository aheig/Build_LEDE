# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: LEDE_SSR++

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'ssh'
        required: false
        default: 'false'

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build LEDE Firmware

    runs-on: ubuntu-latest

    steps:
      - name: 空间清理和初始化环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: 检查 OpenWrt
        uses: actions/checkout@v3
        
      - name: 下载源码
        run: |
          git clone --depth 1 https://github.com/coolsnowwolf/lede -b master openwrt

      - name: 更新 feeds
        run: |
          cd openwrt
          sed -i '/helloworld/d' feeds.conf.default
          sed -i '$a src-git helloworld https://github.com/fw876/helloworld.git;main' feeds.conf.default
          ./scripts/feeds update -a
      - name: 自定义配置
        run: |
          mv ./customize.sh openwrt/customize.sh
          cd openwrt
          chmod +x ./customize.sh && ./customize.sh
          ./scripts/feeds install -a

      - name: 生成配置文件
        run: |
          mv lede-ssr.config openwrt/.config
          cd openwrt
          make defconfig
          sed -i '/^.*DISTRIB_DESCRIPTION.*$/d' package/lean/default-settings/files/zzz-default-settings
          echo "DISTRIB_REVISION='R23.11.26 by Hihoo'" >> package/lean/default-settings/files/zzz-default-settings
      - name: 下载软件包
        run: |
          cd openwrt
          make download -j16

      - name: 编译固件
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: 准备工件
        run: |
          cd openwrt
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: 上传 buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_buildinfo
          path: openwrt/artifact/buildinfo/

      - name: 上传 package
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_package
          path: openwrt/artifact/package/

      - name: 上传固件
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware
          path: openwrt/bin/targets/
          
      - name: 发布
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.RELEASE2_TOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
